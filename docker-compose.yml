---
version: '3.7'
services:

  product_database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PRODUCT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRODUCT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PRODUCT_POSTGRES_DB}
    volumes:
      - db_product:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - product_db


  inventory_database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${INVENTORY_POSTGRES_USER}
      POSTGRES_PASSWORD: ${INVENTORY_POSTGRES_PASSWORD}
      POSTGRES_DB: ${INVENTORY_POSTGRES_DB}
    volumes:
      - db_inventory:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - inventory_db


  config-server:
    image: config-server:v5
    ports:
      - "8071:8071"
    environment:
      SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD: ${GITHUB_PAT}
    healthcheck:
      test: "curl --fail --silent http://config-server:8071/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      backend:
        aliases:
          - "config-server"

  discovery-server:
    image: discovery-server:newest
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent http://admin:pass@discovery-server:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
    networks:
      backend:
        aliases:
          - discovery-server
    depends_on:
      config-server:
        condition: service_healthy




  product-service:
    image: timofeytrofimovich/product-service:v1
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=${PRODUCT_SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${PRODUCT_POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${PRODUCT_POSTGRES_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      product_db:
        aliases:
          - product-service
      backend:
        aliases:
          - product-service
    depends_on:
      discovery-server:
        condition: service_healthy
      product_database:
        condition: service_started


  inventory-service:
    image: timofeytrofimovich/inventory-service:v1
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=${INVENTORY_SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${INVENTORY_POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${INVENTORY_POSTGRES_PASSWORD}
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8071
    networks:
      inventory_db:
        aliases:
          - inventory-service
      backend:
        aliases:
          - inventory-service
    depends_on:
      discovery-server:
        condition: service_healthy
      product_database:
        condition: service_started


networks:
  backend:
  product_db:
  inventory_db:

volumes:
  db_product:
  db_inventory:
