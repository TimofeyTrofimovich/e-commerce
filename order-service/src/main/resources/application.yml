spring:
  application:
    name:
      order-service
  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: admin
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: order_service
  zipkin:
    base-url: htpp://localhost:9411
  sleuth:
    sampler:
      probability: 1.0

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: event:com.example.orderservice.event.OrderPlacedEvent

server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://admin:pass@localhost:8761/eureka


resilience4j:
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true

  timelimiter:
    instances:
      inventory:
        timeout-duration:
          seconds: 3
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration:
          seconds: 5

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/zipkin

